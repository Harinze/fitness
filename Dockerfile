# Step 1: Use an official Node.js image as the base image
FROM node:20 AS build

# Step 2: Set the working directory in the container
WORKDIR /app

# Step 3: Copy the package.json and package-lock.json files
COPY package*.json ./

# Step 4: Install dependencies
RUN npm install

# Step 5: Copy the rest of the React app code
COPY . .

# Step 6: Build the React app for production
RUN npm run build

# Step 7: Use Nginx to serve the built app (static files)
FROM nginx:alpine

# Step 8: Copy the built React app from the previous stage
COPY --from=build /app/dist /usr/share/nginx/html

# Step 9: Expose port 80 for the app
EXPOSE 80

# Step 10: Start Nginx to serve the React app
CMD ["nginx", "-g", "daemon off;"]



# Explanation of the Dockerfile:

# Step 1: We use the official Node.js image to build the React app.

# Step 2â€“5: We copy the necessary files and install dependencies.

# Step 6: We build the React app for production (this generates the static files).

# Step 7: We use Nginx, a lightweight web server, to serve the static files generated by React.

# Step 8: Copy the static files from the build stage to the Nginx server.

# Step 9: Expose port 80 because Nginx will serve the app on this port.

# Step 10: Start Nginx to serve the files.